@model MediaGraph.ViewModels.AdminTools.DatabaseRequestFilter
@{ 
    AjaxOptions options = new AjaxOptions
    {
        HttpMethod = "post",
        OnSuccess = "searchSuccessful",
        OnFailure = "searchFailed"
    };
}
@using(Ajax.BeginForm("RequestPage", "AdminTools", null, options, new { id = "filterForm", autocomplete = "off" }))
{
    @Html.HiddenFor(x => Model.PageNumber)
    <div class="col s6 input-field">
        @Html.LabelFor(x => x.SubmittedBy)
        @Html.TextBoxFor(x => x.SubmittedBy)
    </div>
    <div class="col s6 input-field">
        @Html.LabelFor(x => x.NodeName)
        @Html.TextBoxFor(x => x.NodeName)
    </div>
    <div class="col s12 input-field">
        @Html.LabelFor(x => x.RequestType, new { @class = "active" })
        @Html.EnumDropDownListFor(x => x.RequestType, "All Request Types")
    </div>
    <div class="col s6 input-field">
        <input type="date" name="@Html.NameFor(x => x.LowerBoundDate)" value="@(Model.LowerBoundDate?.ToString("yyyy-mm-dd"))" />
        @Html.LabelFor(x => x.LowerBoundDate, new { @class = "active" })
    </div>
    <div class="col s6 input-field">
        <input type="date" name="@Html.NameFor(x => x.UpperBoundDate)" value="@(Model.UpperBoundDate?.ToString("yyyy-mm-dd"))" />
        @Html.LabelFor(x => x.UpperBoundDate, new { @class = "active" })
    </div>
    <div class="col s12 input-field">
        @Html.LabelFor(x => x.ResultsPerPage, new { @class = "active" })
        @Html.DropDownListFor(x => x.ResultsPerPage, new List<SelectListItem>
        {
            new SelectListItem { Value = "5", Text = "5" },
            new SelectListItem { Value = "10", Text = "10" },
            new SelectListItem { Value = "25", Text = "25" },
            new SelectListItem { Value = "50" , Text = "50" }
        })
    </div>
    <div class="center">
        <button id="filter-button" type="submit" class="waves-effect waves-light green darken-2 btn z-depth-2">Filter <i class="material-icons right">filter_list</i></button>
    </div>
}
